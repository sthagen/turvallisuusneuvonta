# generated by datamodel-codegen:
#   filename:  csaf_2_0.json
#   timestamp: 2021-12-30T15:00:43+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated, Optional

from pydantic import BaseModel, Field

from . import (
    AccessComplexityType,
    AccessVectorType,
    AuthenticationType,
    CiaRequirementType,
    CiaType,
    CollateralDamagePotentialType,
    ExploitabilityType,
    RemediationLevelType,
    ReportConfidenceType,
    ScoreType,
    TargetDistributionType,
)


class Version(Enum):
    """
    CVSS Version
    """

    field_2_0 = '2.0'


class Field0(BaseModel):
    version: Annotated[Version, Field(description='CVSS Version')]
    vectorString: Annotated[
        str,
        Field(
            regex='^((AV:[NAL]|AC:[LMH]|Au:[MSN]|[CIA]:[NPC]|E:(U|POC|F|H|ND)|RL:(OF|TF|W|U|ND)|'
            'RC:(UC|UR|C|ND)|CDP:(N|L|LM|MH|H|ND)|TD:(N|L|M|H|ND)|[CIA]R:(L|M|H|ND))/)*'
            '(AV:[NAL]|AC:[LMH]|Au:[MSN]|[CIA]:[NPC]|E:(U|POC|F|H|ND)|RL:(OF|TF|W|U|ND)|'
            'RC:(UC|UR|C|ND)|CDP:(N|L|LM|MH|H|ND)|TD:(N|L|M|H|ND)|[CIA]R:(L|M|H|ND))$'
        ),
    ]
    accessVector: Optional[AccessVectorType]
    accessComplexity: Optional[AccessComplexityType]
    authentication: Optional[AuthenticationType]
    confidentialityImpact: Optional[CiaType]
    integrityImpact: Optional[CiaType]
    availabilityImpact: Optional[CiaType]
    baseScore: ScoreType
    exploitability: Optional[ExploitabilityType]
    remediationLevel: Optional[RemediationLevelType]
    reportConfidence: Optional[ReportConfidenceType]
    temporalScore: Optional[ScoreType]
    collateralDamagePotential: Optional[CollateralDamagePotentialType]
    targetDistribution: Optional[TargetDistributionType]
    confidentialityRequirement: Optional[CiaRequirementType]
    integrityRequirement: Optional[CiaRequirementType]
    availabilityRequirement: Optional[CiaRequirementType]
    environmentalScore: Optional[ScoreType]
