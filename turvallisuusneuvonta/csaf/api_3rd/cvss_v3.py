# generated by datamodel-codegen:
#   filename:  csaf_2_0.json
#   timestamp: 2021-12-30T15:00:43+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated, Optional

from pydantic import BaseModel, Field

from . import (
    AttackComplexityType,
    AttackComplexityTypeModel,
    AttackVectorType,
    AttackVectorTypeModel,
    CiaRequirementTypeModel,
    CiaRequirementTypeModel1,
    CiaTypeModel,
    CiaTypeModel1,
    ConfidenceType,
    ConfidenceTypeModel,
    ExploitCodeMaturityType,
    ExploitCodeMaturityTypeModel,
    ModifiedAttackComplexityType,
    ModifiedAttackComplexityTypeModel,
    ModifiedAttackVectorType,
    ModifiedAttackVectorTypeModel,
    ModifiedCiaType,
    ModifiedCiaTypeModel,
    ModifiedPrivilegesRequiredType,
    ModifiedPrivilegesRequiredTypeModel,
    ModifiedScopeType,
    ModifiedScopeTypeModel,
    ModifiedUserInteractionType,
    ModifiedUserInteractionTypeModel,
    PrivilegesRequiredType,
    PrivilegesRequiredTypeModel,
    RemediationLevelTypeModel,
    RemediationLevelTypeModel1,
    ScopeType,
    ScopeTypeModel,
    ScoreTypeModel,
    ScoreTypeModel1,
    SeverityType,
    SeverityTypeModel,
    UserInteractionType,
    UserInteractionTypeModel,
)


class Version(Enum):
    """
    CVSS Version
    """

    field_3_0 = '3.0'


class VersionModel(Enum):
    """
    CVSS Version
    """

    field_3_1 = '3.1'


class Field0(BaseModel):
    version: Annotated[Version, Field(description='CVSS Version')]
    vectorString: Annotated[
        str,
        Field(
            regex='^CVSS:3[.]0/((AV:[NALP]|AC:[LH]|PR:[UNLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]|E:[XUPFH]|RL:[XOTWU]|'
            'RC:[XURC]|[CIA]R:[XLMH]|MAV:[XNALP]|MAC:[XLH]|MPR:[XUNLH]|MUI:[XNR]|MS:[XUC]|M[CIA]:[XNLH])/)*'
            '(AV:[NALP]|AC:[LH]|PR:[UNLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]|E:[XUPFH]|RL:[XOTWU]|'
            'RC:[XURC]|[CIA]R:[XLMH]|MAV:[XNALP]|MAC:[XLH]|MPR:[XUNLH]|MUI:[XNR]|MS:[XUC]|M[CIA]:[XNLH])$'
        ),
    ]
    attackVector: Optional[AttackVectorType]
    attackComplexity: Optional[AttackComplexityType]
    privilegesRequired: Optional[PrivilegesRequiredType]
    userInteraction: Optional[UserInteractionType]
    scope: Optional[ScopeType]
    confidentialityImpact: Optional[CiaTypeModel]
    integrityImpact: Optional[CiaTypeModel]
    availabilityImpact: Optional[CiaTypeModel]
    baseScore: ScoreTypeModel
    baseSeverity: SeverityType
    exploitCodeMaturity: Optional[ExploitCodeMaturityType]
    remediationLevel: Optional[RemediationLevelTypeModel]
    reportConfidence: Optional[ConfidenceType]
    temporalScore: Optional[ScoreTypeModel]
    temporalSeverity: Optional[SeverityType]
    confidentialityRequirement: Optional[CiaRequirementTypeModel]
    integrityRequirement: Optional[CiaRequirementTypeModel]
    availabilityRequirement: Optional[CiaRequirementTypeModel]
    modifiedAttackVector: Optional[ModifiedAttackVectorType]
    modifiedAttackComplexity: Optional[ModifiedAttackComplexityType]
    modifiedPrivilegesRequired: Optional[ModifiedPrivilegesRequiredType]
    modifiedUserInteraction: Optional[ModifiedUserInteractionType]
    modifiedScope: Optional[ModifiedScopeType]
    modifiedConfidentialityImpact: Optional[ModifiedCiaType]
    modifiedIntegrityImpact: Optional[ModifiedCiaType]
    modifiedAvailabilityImpact: Optional[ModifiedCiaType]
    environmentalScore: Optional[ScoreTypeModel]
    environmentalSeverity: Optional[SeverityType]


class Field1(BaseModel):
    version: Annotated[VersionModel, Field(description='CVSS Version')]
    vectorString: Annotated[
        str,
        Field(
            regex='^CVSS:3[.]1/((AV:[NALP]|AC:[LH]|PR:[NLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]|E:[XUPFH]|RL:[XOTWU]|'
            'RC:[XURC]|[CIA]R:[XLMH]|MAV:[XNALP]|MAC:[XLH]|MPR:[XNLH]|MUI:[XNR]|MS:[XUC]|M[CIA]:[XNLH])/)*'
            '(AV:[NALP]|AC:[LH]|PR:[NLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]|E:[XUPFH]|RL:[XOTWU]|'
            'RC:[XURC]|[CIA]R:[XLMH]|MAV:[XNALP]|MAC:[XLH]|MPR:[XNLH]|MUI:[XNR]|MS:[XUC]|M[CIA]:[XNLH])$'
        ),
    ]
    attackVector: Optional[AttackVectorTypeModel]
    attackComplexity: Optional[AttackComplexityTypeModel]
    privilegesRequired: Optional[PrivilegesRequiredTypeModel]
    userInteraction: Optional[UserInteractionTypeModel]
    scope: Optional[ScopeTypeModel]
    confidentialityImpact: Optional[CiaTypeModel1]
    integrityImpact: Optional[CiaTypeModel1]
    availabilityImpact: Optional[CiaTypeModel1]
    baseScore: ScoreTypeModel1
    baseSeverity: SeverityTypeModel
    exploitCodeMaturity: Optional[ExploitCodeMaturityTypeModel]
    remediationLevel: Optional[RemediationLevelTypeModel1]
    reportConfidence: Optional[ConfidenceTypeModel]
    temporalScore: Optional[ScoreTypeModel1]
    temporalSeverity: Optional[SeverityTypeModel]
    confidentialityRequirement: Optional[CiaRequirementTypeModel1]
    integrityRequirement: Optional[CiaRequirementTypeModel1]
    availabilityRequirement: Optional[CiaRequirementTypeModel1]
    modifiedAttackVector: Optional[ModifiedAttackVectorTypeModel]
    modifiedAttackComplexity: Optional[ModifiedAttackComplexityTypeModel]
    modifiedPrivilegesRequired: Optional[ModifiedPrivilegesRequiredTypeModel]
    modifiedUserInteraction: Optional[ModifiedUserInteractionTypeModel]
    modifiedScope: Optional[ModifiedScopeTypeModel]
    modifiedConfidentialityImpact: Optional[ModifiedCiaTypeModel]
    modifiedIntegrityImpact: Optional[ModifiedCiaTypeModel]
    modifiedAvailabilityImpact: Optional[ModifiedCiaTypeModel]
    environmentalScore: Optional[ScoreTypeModel1]
    environmentalSeverity: Optional[SeverityTypeModel]
